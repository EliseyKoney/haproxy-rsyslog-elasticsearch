version: "3"

services:
  haproxy:
    # image: my-haproxy
    build: ./haproxy
    container_name: haproxy
    ports:
      - 8080:80
    sysctls:
      - 'net.ipv4.ip_unprivileged_port_start=0'
    command: '/bin/sh -c "/sbin/syslogd -O /dev/stdout && haproxy -f /usr/local/etc/haproxy/haproxy.cfg"'
    depends_on:
      rsyslog:
        condition: service_started

  rsyslog:
    # image: rsyslog/syslog_appliance_alpine
    # image: jpvriel/rsyslog
    # image: jpvriel/rsyslog:latest
    # image: itrust/rsyslog
    # build: ../rsyslog-docker/appliance/alpine
    build: ./rsyslog
    container_name: rsyslog
    ports:
      - 514:514
    environment:
      - "ENABLE_ELASTIC=on"
    depends_on:
      - es01
  #      pgdb:
  #        condition: service_healthy

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #volumes:
    #  - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    # networks:
    #   - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - data02:/usr/share/elasticsearch/data
    # networks:
    #   - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.13.2
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200"]'
#     ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
#   networks:
#     - elastic

#volumes:
#  data01:
#    driver: local
#  data02:
#    driver: local
#  data03:
#    driver: local
#
#networks:
#  elastic:
#    driver: bridge


#
#  pgdb:
#    image: postgres
#    container_name: pgdb
#    environment:
#      - "POSTGRES_USER=rsyslog"
#      - "POSTGRES_PASSWORD=test1234"
#      - "POSTGRES_DB=syslog"
#    ports:
#      - "5443:5432"
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

#  mongo:
#    image: mongo
#    container_name: mongo
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: user
#      MONGO_INITDB_ROOT_PASSWORD: pwd
#    ports:
#      - 27015:27017

